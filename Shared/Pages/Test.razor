@page "/Test"
@using WYSIWYGTextEditor
@using HtmlAgilityPack
@using AllWeKnow.Shared.Components
@using AllWeKnow.Shared.Components.Partials
@using WYSIWYGTextEditor
@using AllWeKnow.App.Helpers
@using System.Drawing
@using System.Drawing.Imaging
@using System.Net.Mime


<TextEditor @ref="@Editor">
        <EditorContent>
            <Images/>
        </EditorContent>
</TextEditor>


<button @onclick="Save">Save</button>

<Title>Test</Title>

@code {

    TextEditor Editor;
    HtmlDocument document = new();

    private async Task Save()
    {
        var content = await Editor.GetHTML();


        document.LoadHtml(content);
        document.DocumentNode.Descendants("img")
            .ToList()
            .ForEach(async x =>
            {
                var source = x.GetAttributeValue("src", null);
                string fileType = source[..15] switch
                {
                    "data:image/jpeg" => "jpeg",
                    "data:image/jpg;" => "jpg",
                    "data:image/png;" => "png",
                    "data:image/gif;" => "gif",                
                    "data:image/ico;" => "ico",                
                    _ => ""
                };

                if (fileType == "")
                {
                    return;
                }

                var fileName = Path.GetRandomFileName() + "." + fileType;
                string filePath = PathBuilder.File("wwwroot", "bucket", "images", fileName);

                var bytes = Convert.FromBase64String(source.Replace("data:image/"+fileType+";base64,", ""));

                await using FileStream fs = new(filePath, FileMode.Create);
                using var ms = new MemoryStream(bytes);
                await ms.CopyToAsync(fs);
                
                x.SetAttributeValue("src", filePath.Replace(PathBuilder.Dir("wwwroot"), ""));
                
            });

        var finalString = document.DocumentNode.InnerHtml;

    }

}